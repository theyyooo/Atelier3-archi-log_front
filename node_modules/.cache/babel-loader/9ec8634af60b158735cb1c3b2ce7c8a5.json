{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/archi-logiciel/atelier3-front/src/components/userform/UserForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Header, Button } from 'semantic-ui-react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserForm = props => {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState({\n    surname: \"\",\n    lastname: \"\",\n    pwd: \"\"\n  });\n  const dispatch = useDispatch();\n\n  function processInput(event, _ref) {\n    let {\n      valueData\n    } = _ref;\n    const target = event.currentTarget;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n    console.log(event.target.value);\n    let currentVal = currentUser;\n    setCurrentUser({ ...currentUser,\n      [name]: value\n    });\n    currentVal[name] = value; //props.handleChange(currentVal);\n\n    dispatch(updateUser(currentVal));\n  }\n\n  ;\n\n  function submitOrder(data) {\n    // props.submitUserHandler(data);\n    dispatch(submitUser(currentUser));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      as: \"h4\",\n      dividing: true,\n      children: \"User Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      widths: \"equal\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n        fluid: true,\n        label: \"Surname\",\n        placeholder: \"Surname\",\n        name: \"surname\",\n        onChange: processInput,\n        value: currentUser.surname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n        fluid: true,\n        label: \"Last Name\",\n        placeholder: \"Last Name\",\n        name: \"lastname\",\n        onChange: processInput,\n        value: currentUser.lastname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n      children: /*#__PURE__*/_jsxDEV(Form.Input, {\n        type: \"password\",\n        label: \"Pwd\",\n        placeholder: \"\",\n        onChange: processInput,\n        name: \"pwd\",\n        value: currentUser.pwd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      onClick: submitOrder,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserForm, \"6q/LrD8cKi+AuoOzMYIe9FpEKac=\", false, function () {\n  return [useDispatch];\n});\n\n_c = UserForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"sources":["/home/user/Documents/archi-logiciel/atelier3-front/src/components/userform/UserForm.js"],"names":["React","useState","Form","Header","Button","useDispatch","useSelector","UserForm","props","currentUser","setCurrentUser","surname","lastname","pwd","dispatch","processInput","event","valueData","target","currentTarget","value","type","checked","name","console","log","currentVal","updateUser","submitOrder","data","submitUser"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Form, Header,Button } from 'semantic-ui-react'\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport const UserForm = (props) =>{\n   const [currentUser,setCurrentUser]= useState({                                  \n                                            surname:\"\",\n                                            lastname:\"\",                                      \n                                            pwd:\"\",\n                                        });\n    const dispatch = useDispatch();\n\n\n    function processInput(event, { valueData }){\n        const target = event.currentTarget;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        console.log(event.target.value);\n        let currentVal=currentUser;\n        setCurrentUser({...currentUser, [name]: value});\n        currentVal[name]= value;\n        //props.handleChange(currentVal);\n        dispatch(updateUser(currentVal));\n    };\n\n    function submitOrder(data){\n       // props.submitUserHandler(data);\n       dispatch(submitUser(currentUser));\n    }\n    \n    return (\n        <Form>\n            <Header as='h4' dividing>\n                User Registration\n            </Header>\n            <Form.Group widths='equal'>\n                <Form.Input fluid label='Surname' placeholder='Surname' name=\"surname\" onChange={processInput} value={currentUser.surname} />\n                <Form.Input fluid label='Last Name' placeholder='Last Name' name=\"lastname\"  onChange={processInput} value={currentUser.lastname}/>\n            </Form.Group>\n            <Form.Field>\n                <Form.Input type=\"password\" label=\"Pwd\" placeholder=\"\" onChange={processInput}  name=\"pwd\" value={currentUser.pwd}/>\n            </Form.Field>\n            <Button type='submit' onClick={submitOrder}>Submit</Button>\n        </Form>\n\n    );\n    \n    }"]},"metadata":{},"sourceType":"module"}