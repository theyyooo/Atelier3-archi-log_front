{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/archi-logiciel/atelier3-front/src/components/PLAY/PlayRoom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Header } from '../TOOLS/HEADER/Header';\nimport { Form, Button, GridColumn, Grid } from 'semantic-ui-react';\nimport { TableContainer } from '../TOOLS/TableContainer';\nimport { DisplayCard } from './DisplayCard';\nimport { useParams } from \"react-router\";\nimport { useNavigate } from 'react-router';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PlayRoom = props => {\n  _s();\n\n  const [form, setForm] = useState([]);\n  let current_user = useSelector(state => state.userReducer.user);\n  let {\n    room\n  } = useParams();\n  const navigate = useNavigate();\n  v;\n\n  const callbackAllCardToSell = cards => {\n    setForm(cards.data);\n    dispatch(updateCurrentCard(cards.data[0]));\n    localStorage.setItem('card', cards.data[0]);\n  };\n\n  useEffect(() => {\n    if (!current_user.id) {\n      navigate(\"/login\");\n    }\n\n    axios.get('http://localhost:8080/cards/' + current_user.id + '/sell').then(data => callbackAllCardToSell(data)).catch(error => console.log('error', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Play Room \" + room\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      columns: 2,\n      relaxed: \"very\",\n      stackable: true,\n      children: [/*#__PURE__*/_jsxDEV(GridColumn, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginLeft: \"25%\",\n            marginRight: \"25%\"\n          },\n          children: [\" \", /*#__PURE__*/_jsxDEV(TableContainer, {\n            type: \"card\",\n            list: form\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 73\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(GridColumn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PlayRoom, \"Pzz052hMf6psPHAR6skUSOFJJRQ=\", false, function () {\n  return [useSelector, useParams, useNavigate];\n});\n\n_c = PlayRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayRoom\");","map":{"version":3,"sources":["/home/user/Documents/archi-logiciel/atelier3-front/src/components/PLAY/PlayRoom.js"],"names":["React","useState","useEffect","useDispatch","useSelector","Header","Form","Button","GridColumn","Grid","TableContainer","DisplayCard","useParams","useNavigate","axios","PlayRoom","props","form","setForm","current_user","state","userReducer","user","room","navigate","v","callbackAllCardToSell","cards","data","dispatch","updateCurrentCard","localStorage","setItem","id","get","then","catch","error","console","log","marginLeft","marginRight"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,UAAvB,EAAmCC,IAAnC,QAA+C,mBAA/C;AACA,SAASC,cAAT,QAA+B,yBAA/B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,EAAD,CAAhC;AAEA,MAAIkB,YAAY,GAAGf,WAAW,CAACgB,KAAK,IAAIA,KAAK,CAACC,WAAN,CAAkBC,IAA5B,CAA9B;AAGA,MAAI;AAAEC,IAAAA;AAAF,MAAWX,SAAS,EAAxB;AAEA,QAAMY,QAAQ,GAAGX,WAAW,EAA5B;AAEAY,EAAAA,CAAC;;AAED,QAAMC,qBAAqB,GAAIC,KAAD,IAAW;AACrCT,IAAAA,OAAO,CAACS,KAAK,CAACC,IAAP,CAAP;AACAC,IAAAA,QAAQ,CAACC,iBAAiB,CAACH,KAAK,CAACC,IAAN,CAAW,CAAX,CAAD,CAAlB,CAAR;AACAG,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BL,KAAK,CAACC,IAAN,CAAW,CAAX,CAA7B;AACH,GAJD;;AAMA1B,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACiB,YAAY,CAACc,EAAlB,EAAsB;AAClBT,MAAAA,QAAQ,CAAC,QAAD,CAAR;AACH;;AACDV,IAAAA,KAAK,CAACoB,GAAN,CAAU,iCAAiCf,YAAY,CAACc,EAA9C,GAAmD,OAA7D,EACKE,IADL,CACUP,IAAI,IAAIF,qBAAqB,CAACE,IAAD,CADvC,EAEKQ,KAFL,CAEWC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB,CAFpB;AAGH,GAPQ,EAON,EAPM,CAAT;AASA,sBACI;AAAA,4BACA,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,eAAed;AAA9B;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,IAAD;AAAM,MAAA,OAAO,EAAE,CAAf;AAAkB,MAAA,OAAO,EAAC,MAA1B;AAAiC,MAAA,SAAS,MAA1C;AAAA,8BACI,QAAC,UAAD;AAAA,+BACI;AAAK,UAAA,KAAK,EAAE;AAAEiB,YAAAA,UAAU,EAAE,KAAd;AAAqBC,YAAAA,WAAW,EAAE;AAAlC,WAAZ;AAAA,uCAAwD,QAAC,cAAD;AAAgB,YAAA,IAAI,EAAC,MAArB;AAA4B,YAAA,IAAI,EAAExB;AAAlC;AAAA;AAAA;AAAA;AAAA,kBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADJ;AAcH,CAzCM;;GAAMF,Q;UAGUX,W,EAGJQ,S,EAEEC,W;;;KARRE,Q","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Header } from '../TOOLS/HEADER/Header';\nimport { Form, Button, GridColumn, Grid } from 'semantic-ui-react';  \nimport { TableContainer } from '../TOOLS/TableContainer';\nimport { DisplayCard } from './DisplayCard';\nimport { useParams } from \"react-router\";\nimport { useNavigate } from 'react-router';\nimport axios from 'axios';\n\nexport const PlayRoom = (props) => {\n    const [form, setForm] = useState([]);\n\n    let current_user = useSelector(state => state.userReducer.user);\n    \n\n    let { room } = useParams();\n\n    const navigate = useNavigate();\n\n    v\n\n    const callbackAllCardToSell = (cards) => {\n        setForm(cards.data);\n        dispatch(updateCurrentCard(cards.data[0]))\n        localStorage.setItem('card', cards.data[0]);\n    }\n\n    useEffect(() => {\n        if (!current_user.id) {\n            navigate(\"/login\");\n        }\n        axios.get('http://localhost:8080/cards/' + current_user.id + '/sell')\n            .then(data => callbackAllCardToSell(data))\n            .catch(error => console.log('error', error));\n    }, []);\n\n    return (\n        <>\n        <Header title={\"Play Room \" + room} />\n        <Grid columns={2} relaxed='very' stackable>\n            <GridColumn>\n                <div style={{ marginLeft: \"25%\", marginRight: \"25%\" }}> <TableContainer type=\"card\" list={form} /></div>\n            </GridColumn>\n            <GridColumn>\n                {/* <DisplayCard img='pika.png'></DisplayCard> */}\n                {/* <Button secondary>Play</Button> */}\n            </GridColumn>\n        </Grid>\n        </>\n    );\n}"]},"metadata":{},"sourceType":"module"}